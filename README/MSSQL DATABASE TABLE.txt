CREATE TABLE users (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  name TEXT,
  mail TEXT,
  password TEXT,
  point INTEGER,
  discount float
);
CREATE TABLE categories (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  names TEXT,
  parent_id INTEGER,
  FOREIGN KEY (parent_id) REFERENCES categories(id)
  )
CREATE TABLE products (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  name TEXT,
  price REAL,
  size TEXT,
  color TEXT,
  stock INTEGER,
  image TEXT,
  category_id INTEGER,
  FOREIGN KEY (category_id) REFERENCES categories(id)
);



CREATE TABLE favorites (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  product_id INTEGER,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE reviews (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  product_id INTEGER,
  rating INTEGER,
  comment TEXT,
  image TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE cart (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  product_id INTEGER,
  quantity INTEGER,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (product_id) REFERENCES products(id)
);


CREATE TABLE addresses (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  address TEXT,
  city TEXT,
  street TEXT,
  zipcode INTEGER,
  FOREIGN KEY (user_id) REFERENCES users(id)
);
CREATE TABLE orders (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  address_id INTEGER,
  total_price REAL,
  order_date DATE,
  status TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id),
  FOREIGN KEY (address_id) REFERENCES addresses(id)
);

CREATE TABLE order_items (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  order_id INTEGER,
  product_id INTEGER,
  quantity INTEGER,
  price REAL,
  is_returned INTEGER,
  FOREIGN KEY (order_id) REFERENCES orders(id),
  FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE TABLE wallets (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  user_id INTEGER,
  card_number TEXT,
  card_name TEXT,
  FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE branches (
  id INTEGER PRIMARY KEY IDENTITY(1,1),
  name TEXT,
  city TEXT,
  street TEXT,
  zipcode TEXT
);

